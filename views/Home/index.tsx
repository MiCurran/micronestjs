import Head from 'next/head'
import { useEffect, useState } from 'react';

export default function HomeView({data, gameData}: {data: unknown, gameData: unknown}) {
const [game, setGame] = useState({id: null});
const [playerOne, setPlayerOne] = useState({id: 0});
const [playerTwo, setPlayerTwo] = useState({id: 0});
const [playerOneHits, setPlayerOneHits] = useState<number>(0)
const [playerTwoHits, setPlayerTwoHits] = useState<number>(0)
const [winnerHere, setWinnerHere] = useState(null);

const callStartGame = async () => {
  const response = await fetch('/api/hello');
  const status = response.status;
  const data = await response.json();
  if (status === 200) {
    setGame(data.data.CreateGame);
  }
}

const callCreatePlayer1 = async () => {
  const response = await fetch(`/api/createPlayer?gameId=${game.id}`)
  const status = response.status;
  const data = await response.json();
  if (status === 200) {
    setPlayerOne(data.data.initPlayer.id);
  }
}

const callCreatePlayer2 = async () => {
  const response = await fetch(`/api/createPlayer?gameId=${game.id}`)
  const status = response.status;
  const data = await response.json();
  if (status === 200) {
    setPlayerTwo(data.data.initPlayer.id);
  }
}

const callPlayerOneAttack = async () => {
  const response = await fetch(`/api/playerOneAttack?gameId=${game.id}`);
  const status = response.status;
  const data = await response.json();
  if (status === 200) {
    setPlayerOneHits(data.data.UpdateP1Hits.player1Hits);
  }
}
const callPlayerTwoAttack = async () => {
  const response = await fetch(`/api/playerTwoAttack?gameId=${game.id}`);
  const status = response.status;
  const data = await response.json();
  if (status === 200) {
    setPlayerTwoHits(data.data.UpdateP2Hits.player2Hits);
  }
}


useEffect(() => {
    //when either playerOnehits || playerTwoHits === 10
    if (playerOneHits === 10) {
        //now we know winner
        // call graphql to update the gameWinner col
        // set gameWinner playerOne
        const response = fetch(`/api/updateWinner?gameId=${game.id}&winnerId=${playerOne}`)
            .then((res) => res.json().then((json) => console.log(json)))
        //const status = response.status;
        //const data = await response.json();
        console.log(response);
    }
    if (playerTwoHits === 10) {
        //set gameWinner playerTwo
        // playerTwo.id
    }
}, [playerOneHits, playerTwoHits])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main style={{
          display: "flex",
          flexDirection: 'column',
          height: '100vh',
          justifyContent: 'center',
          alignItems: 'center'
        }}
      >

        <div>
          <h3>Hits</h3>
          <p>player 1: {playerOneHits}</p>
          <p>player 2: {playerTwoHits}</p>
        </div>

        <button
          disabled={game.id !== null}
          style={{cursor: 'pointer'}}
          onClick={async () => callStartGame()}
        >
          start game
        </button>

          {game.id !== null &&
            <>
            <p>{JSON.stringify(game, null, 2)}</p>
            <button
              onClick={() => callCreatePlayer1()}
            >
              create player 1
            </button>

            <button
              onClick={() => callCreatePlayer2()}
            >
              create player 2
            </button>
            </>
          }

          {playerOne.id !== 0 &&
          <>
            <p>player one is here</p>
            <button
              onClick={() => callPlayerOneAttack()}
            >
              send playerOne attack
            </button>
            </>
          }
          {playerTwo.id !== 0 &&
          <>
            <p>player two is here</p>
            <button
              onClick={() => callPlayerTwoAttack()}
            >
              send playerTwo attack
            </button>
            </>
          }
      </main>
    </>
  )
}